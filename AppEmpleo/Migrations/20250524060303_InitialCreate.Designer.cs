// <auto-generated />
using System;
using AppEmpleo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppEmpleo.Migrations
{
    [DbContext(typeof(AppEmpleoContext))]
    [Migration("20250524060303_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppEmpleo.Models.Candidato", b =>
                {
                    b.Property<int>("CandidatoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CandidatoId"));

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("CandidatoId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Candidatos");
                });

            modelBuilder.Entity("AppEmpleo.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("AppEmpleo.Models.Curriculum", b =>
                {
                    b.Property<int>("CurriculumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurriculumId"));

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<bool?>("EsPreferido")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("FechaCarga")
                        .HasColumnType("date");

                    b.Property<string>("NombreArchivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RutaArchivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurriculumId");

                    b.HasIndex("CandidatoId");

                    b.ToTable("Curriculums");
                });

            modelBuilder.Entity("AppEmpleo.Models.Habilidad", b =>
                {
                    b.Property<int>("HabilidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HabilidadId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HabilidadId");

                    b.ToTable("Habilidades");
                });

            modelBuilder.Entity("AppEmpleo.Models.Oferta", b =>
                {
                    b.Property<int>("OfertaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfertaId"));

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("FechaCierre")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<string>("ModalidadTrabajo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreOferta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReclutadorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Salario")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("OfertaId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ReclutadorId");

                    b.ToTable("Ofertas");
                });

            modelBuilder.Entity("AppEmpleo.Models.OfertaHabilidad", b =>
                {
                    b.Property<int>("OfertaHabilidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfertaHabilidadId"));

                    b.Property<int>("HabilidadId")
                        .HasColumnType("int");

                    b.Property<int>("OfertaEmpleoId")
                        .HasColumnType("int");

                    b.HasKey("OfertaHabilidadId");

                    b.HasIndex("HabilidadId");

                    b.HasIndex("OfertaEmpleoId");

                    b.ToTable("OfertaHabilidades");
                });

            modelBuilder.Entity("AppEmpleo.Models.Postulacion", b =>
                {
                    b.Property<int>("PostulacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostulacionId"));

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<int>("CurriculumId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPostulacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("OfertaEmpleoId")
                        .HasColumnType("int");

                    b.HasKey("PostulacionId");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("CurriculumId");

                    b.HasIndex("OfertaEmpleoId");

                    b.ToTable("Postulaciones");
                });

            modelBuilder.Entity("AppEmpleo.Models.Reclutador", b =>
                {
                    b.Property<int>("ReclutadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReclutadorId"));

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ReclutadorId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Reclutadores");
                });

            modelBuilder.Entity("AppEmpleo.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClaveHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaRegistro")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AppEmpleo.Models.Candidato", b =>
                {
                    b.HasOne("AppEmpleo.Models.Usuario", "Usuario")
                        .WithOne("Candidato")
                        .HasForeignKey("AppEmpleo.Models.Candidato", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AppEmpleo.Models.Curriculum", b =>
                {
                    b.HasOne("AppEmpleo.Models.Candidato", "Candidato")
                        .WithMany("Curriculums")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidato");
                });

            modelBuilder.Entity("AppEmpleo.Models.Oferta", b =>
                {
                    b.HasOne("AppEmpleo.Models.Categoria", "Categoria")
                        .WithMany("Ofertas")
                        .HasForeignKey("CategoriaId");

                    b.HasOne("AppEmpleo.Models.Reclutador", "Reclutador")
                        .WithMany("Ofertas")
                        .HasForeignKey("ReclutadorId");

                    b.Navigation("Categoria");

                    b.Navigation("Reclutador");
                });

            modelBuilder.Entity("AppEmpleo.Models.OfertaHabilidad", b =>
                {
                    b.HasOne("AppEmpleo.Models.Habilidad", "Habilidad")
                        .WithMany("OfertaHabilidades")
                        .HasForeignKey("HabilidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppEmpleo.Models.Oferta", "OfertaEmpleo")
                        .WithMany("OfertaHabilidades")
                        .HasForeignKey("OfertaEmpleoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habilidad");

                    b.Navigation("OfertaEmpleo");
                });

            modelBuilder.Entity("AppEmpleo.Models.Postulacion", b =>
                {
                    b.HasOne("AppEmpleo.Models.Candidato", "Candidato")
                        .WithMany("Postulaciones")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AppEmpleo.Models.Curriculum", "Curriculum")
                        .WithMany("Postulaciones")
                        .HasForeignKey("CurriculumId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AppEmpleo.Models.Oferta", "OfertaEmpleo")
                        .WithMany("Postulaciones")
                        .HasForeignKey("OfertaEmpleoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Candidato");

                    b.Navigation("Curriculum");

                    b.Navigation("OfertaEmpleo");
                });

            modelBuilder.Entity("AppEmpleo.Models.Reclutador", b =>
                {
                    b.HasOne("AppEmpleo.Models.Usuario", "Usuario")
                        .WithOne("Reclutador")
                        .HasForeignKey("AppEmpleo.Models.Reclutador", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AppEmpleo.Models.Candidato", b =>
                {
                    b.Navigation("Curriculums");

                    b.Navigation("Postulaciones");
                });

            modelBuilder.Entity("AppEmpleo.Models.Categoria", b =>
                {
                    b.Navigation("Ofertas");
                });

            modelBuilder.Entity("AppEmpleo.Models.Curriculum", b =>
                {
                    b.Navigation("Postulaciones");
                });

            modelBuilder.Entity("AppEmpleo.Models.Habilidad", b =>
                {
                    b.Navigation("OfertaHabilidades");
                });

            modelBuilder.Entity("AppEmpleo.Models.Oferta", b =>
                {
                    b.Navigation("OfertaHabilidades");

                    b.Navigation("Postulaciones");
                });

            modelBuilder.Entity("AppEmpleo.Models.Reclutador", b =>
                {
                    b.Navigation("Ofertas");
                });

            modelBuilder.Entity("AppEmpleo.Models.Usuario", b =>
                {
                    b.Navigation("Candidato");

                    b.Navigation("Reclutador");
                });
#pragma warning restore 612, 618
        }
    }
}
